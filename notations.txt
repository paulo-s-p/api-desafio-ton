from flask import Flask

app = Flask(__name__)
app.config.from_object('config')

from .routes import routes




*** iniciar o servidor
export FLASK_APP=app.py
export FLASK_ENV=development
export FLASK_DEBUG=True
flask run

*** Gerar o banco de dados
flask db init
flask db migrate
flask db upgrade

Na máquina de desenvolvimento

export FLASK_CONFIG=development.cfg
export FLASK_CONFIG_TEST=/test.cfg

Na máquina de produção

export FLASK_CONFIG=/server/configurations/production.cfg

packages

Flask = "*"
flask-marshmallow = "*"
Flask-Migrate = "*"
Flask-SQLAlchemy = "*"
marshmallow-sqlalchemy = "*"
psycopg2==2.9.1
PyJWT = "*"
SQLAlchemy = "*"
Werkzeug==2.0.2

# import string
# import random
import os

from flask import config
basedir = os.path.abspath(os.path.dirname(__file__))
PROJECT_ROOT = os.path.abspath(os.path.dirname(__file__))
MEDIA_ROOT = os.path.join(PROJECT_ROOT, 'media_files')
DOCUMENTS_ROOT = os.path.join(PROJECT_ROOT, 'doc_files')
# random_str = string.ascii_letters + string.digits + string.ascii_uppercase

# key = ''.join(random.choice(random_str) for i in range(12))

class Config(object):
    DEBUG = False
    TESTING = False
    CSRF_ENABLED = True
    SECRET_KEY = '54b2e165910bae6b315781b0403522e30e6045d5'
    SQLALCHEMY_TRACK_MODIFICATIONS = False

class ProductionConfig(Config):
    DEBUG = False
    SQLALCHEMY_DATABASE_URI = os.environ.get('DATABASE_URL')

class DevelopmentConfig(Config):
    ENV="development"
    DEVELOPMENT = True
    SQLALCHEMY_DATABASE_URI = 'postgresql://postgres:postgres@localhost:5432/sitepmp'



